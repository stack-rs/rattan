name: Test

on:
  push:
    paths-ignore:
      - 'documents/**'
      - 'assets/**'
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-all-features:
    name: cargo test with all features
    strategy:
      fail-fast: false
      matrix:
        kernel: [ "5.4", "5.15", "6.8", "6.12" ]
    runs-on: ${{ matrix.kernel }}
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
      - run: sudo apt-get update && sudo apt-get install -y iproute2 ethtool iputils-ping iperf3 datamash bc pkg-config m4 libelf-dev libpcap-dev gcc-multilib -y
      - run: |
          sudo tee /etc/apt/sources.list.d/llvm.list <<EOF
          deb http://apt.llvm.org/$(lsb_release -s -c)/ llvm-toolchain-$(lsb_release -s -c)-17 main
          deb-src http://apt.llvm.org/$(lsb_release -s -c)/ llvm-toolchain-$(lsb_release -s -c)-17 main
          EOF
      - run: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      - run: sudo apt-get update && sudo apt-get install libllvm17 llvm-17 llvm-17-runtime clang-17 clang-tools-17 libclang-common-17-dev libclang-17-dev libclang1-17 -y
      - run: sudo ln -sf /usr/bin/clang-17 /usr/bin/clang && sudo ln -sf /usr/bin/llc-17 /usr/bin/llc
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - run: cargo nextest run --profile ci --all-features --release --workspace
        env:
          RUST_LOG: 'info'
          CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER: 'sudo -E'
          # For insta to disable writing new snapshot files and fail on mismatch
          CI: 'true'
      - name: Test CLI
        run: ./ci/scripts/test_cli.sh
      - run: sudo ./scripts/clean_stdenv.sh -a
